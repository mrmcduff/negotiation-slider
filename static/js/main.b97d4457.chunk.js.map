{"version":3,"sources":["components/FormRowItem.tsx","components/FormSlider.tsx","helpers/textHelpers.ts","components/TableStack.tsx","App.tsx","theme.ts","index.tsx"],"names":["makeStyles","theme","formRow","height","padding","marginBottom","spacing","formRowExtended","rowLabel","minWidth","fontWeight","flexHorizontal","display","flexDirection","justifyContent","useStyles","commonStyle","width","verticalAlign","narrowStyle","extendedStyle","sliderStyle","FormSlider","props","min","max","marks","setValue","styles","Slider","className","defaultValue","aria-labelledby","step","valueLabelDisplay","value","onChange","event","MAGIC_LENGTH","stackStyle","rowStyle","entryStyle","marginLeft","marginRight","DEFAULT_MARKS","label","TableStack","useState","selection","setSelection","setMarks","textLabel","setTextLabel","labelError","setLabelError","textValues","setTextValues","valueError","setValueError","setMin","setMax","useEffect","outputVals","userEntry","userSplit","split","length","console","log","splitLabelList","updatedMarks","map","mark","index","sanitizedSplit","entry","parseInt","filter","val","undefined","splitNumberList","minimax","mx","forEach","m","getMarksMinMax","Typography","variant","TextField","rows","margin","placeholder","error","target","spellCheck","App","bonus","setBonus","jobAssignment","setJobAssignment","vaca","setVaca","startDate","setStartDate","meCov","setMeCov","inCov","setInCov","salary","setSalary","location","setLocation","score","setScore","cx","Table","TableHead","TableRow","TableCell","align","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.b97d4457.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { number } from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n    formRow: {\n        height: '40px',\n        padding: '0px 0px 0px 4px',\n        marginBottom: theme.spacing(3),\n    },\n    formRowExtended: {\n        height: '100px',\n        marginBottom: theme.spacing(3),\n    },\n    rowLabel: {\n        minWidth: '240px',\n        fontWeight: 'bold',\n        padding: '10px 0px 10px 0px',\n    },\n    flexHorizontal: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    }\n}));\n\ninterface FormRowItemProps {\n    title: string;\n    extended?: boolean;\n    children(): JSX.Element;\n    displayValue: number;\n}\n\nconst createRowLabel = (title: string, styles: string) => {\n    return <div className={styles}>{title}</div>;\n};\n\nexport const FormRowItem: React.FC<FormRowItemProps> = props => {\n    const styles = useStyles();\n    // const commonStyles = useCommonStyles();\n\n    return (\n        <div className={cx(styles.flexHorizontal, props.extended ? styles.formRowExtended : styles.formRow)}>\n            {createRowLabel(props.title, styles.rowLabel)}\n            {props.children()}\n            <Typography variant=\"body1\">{props.displayValue.toString()}</Typography>\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { Typography, Slider } from '@material-ui/core';\nimport { Mark } from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles(theme => ({\n    commonStyle: {\n        width: 760,\n        verticalAlign: 'center',\n    },\n    narrowStyle: {\n        width: 180,\n        verticalAlign: 'center',\n    },\n    extendedStyle: {\n        width: 760,\n        verticalAlign: 'center',\n    },\n    sliderStyle: {\n        width: 256,\n        minWidth: 256,\n    }\n}));\n\ninterface FormSliderProps {\n    hint?: string;\n    min: number;\n    max: number;\n    value: number;\n    setValue: React.Dispatch<React.SetStateAction<number>>;\n    marks: Mark[];\n}\n\nfunction valuetext(value: number): string {\n    return `${value}Â°C`;\n}\n\nexport const FormSlider: React.FC<FormSliderProps> = props => {\n    const { min, max, marks, setValue } = props;\n    const styles = useStyles();\n\n    // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //     props.setValue(event.target.value);\n    // };\n\n    const handleChange = (event: React.ChangeEvent<{}>, value: number | number[]) => {\n        const numVal = value as number;\n        setValue(numVal);\n    }\n    return (\n        <div>\n            <Slider\n                className={styles.sliderStyle}\n                defaultValue={min}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={null}\n                valueLabelDisplay=\"auto\"\n                min={min}\n                max={max}\n                value={props.value}\n                onChange={handleChange}\n                marks={marks}\n            />\n        </div>\n    );\n};\n","\nconst MAGIC_LENGTH = 5;\n\nexport function splitNumberList(userEntry: string): number[] {\n    const userSplit = userEntry.split(',');\n    if (userSplit.length !== MAGIC_LENGTH) {\n        console.log('You gave me bad info');\n        return [];\n    }\n    const unsanitizedSplit = userSplit.map(entry => parseInt(entry));\n    const sanitizedSplit = unsanitizedSplit.filter(val => val !== undefined);\n    if (sanitizedSplit.length === MAGIC_LENGTH) {\n        return sanitizedSplit;\n    }\n    return [];\n}\n\nexport function splitLabelList(userEntry: string): string[] {\n    const userSplit = userEntry.split(',');\n    if (userSplit.length !== MAGIC_LENGTH) {\n        console.log('You gave me bad info');\n        return [];\n    }\n    return userSplit;\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Mark } from '@material-ui/core/Slider';\nimport { FormSlider } from './FormSlider';\nimport { TextField } from '@material-ui/core';\nimport { splitNumberList, splitLabelList } from '../helpers/textHelpers';\n\nconst useStyles = makeStyles(theme => ({\n    stackStyle: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    rowStyle: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    entryStyle: {\n        width: 384,\n        minWidth: 384,\n        marginLeft: 12,\n        marginRight: 12,\n    },\n    extendedStyle: {\n        width: 760,\n        verticalAlign: 'center',\n    },\n    sliderStyle: {\n        minWidth: 384,\n    }\n}));\n\ninterface TableStackProps {\n    setValue: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst DEFAULT_MARKS = [\n    {\n        value: 1,\n        label: 'one'\n    },\n    {\n        value: 2,\n        label: 'two'\n    }, {\n        value: 3,\n        label: 'three'\n    }, {\n        value: 4,\n        label: 'four'\n    }, {\n        value: 5,\n        label: 'five'\n    },\n] as const;\n\nfunction getMarksMinMax(mx: Mark[]): { min: number, max: number } {\n    let min = mx[0].value;\n    let max = mx[0].value;\n    mx.forEach(m => {\n        if (m.value < min) {\n            min = m.value;\n        }\n        if (m.value > max) {\n            max = m.value;\n        }\n    });\n    return { min, max }\n}\n\nexport const TableStack: React.FC<TableStackProps> = props => {\n    const styles = useStyles();\n    const [selection, setSelection] = useState(1);\n    const [marks, setMarks] = useState<Mark[]>([...DEFAULT_MARKS]);\n\n    const [textLabel, setTextLabel] = useState('');\n    const [labelError, setLabelError] = useState(false);\n    const [textValues, setTextValues] = useState('');\n    const [valueError, setValueError] = useState(false);\n    const [min, setMin] = useState<number>(DEFAULT_MARKS[0].value);\n    const [max, setMax] = useState<number>(DEFAULT_MARKS[4].value);\n\n    useEffect(() => {\n        const outputVals = splitLabelList(textLabel);\n        if (outputVals.length > 0) {\n            const updatedMarks = marks.map((mark, index) => ({ value: mark.value, label: outputVals[index] }));\n            setLabelError(false);\n            setMarks(updatedMarks);\n        } else {\n            setLabelError(true);\n        }\n    }, [textLabel]);\n    useEffect(() => {\n        const outputVals = splitNumberList(textValues);\n        if (outputVals.length > 0) {\n            const updatedMarks = marks.map((mark, index) => ({ value: outputVals[index], label: mark.label }));\n            const minimax = getMarksMinMax(updatedMarks);\n            setMin(minimax.min);\n            setMax(minimax.max);\n            setValueError(false);\n            setMarks(updatedMarks);\n        } else {\n            setValueError(true);\n        }\n    }, [textValues]);\n    useEffect(() => {\n        props.setValue(selection);\n    }, [selection]);\n    return (\n        <div className={styles.stackStyle}>\n            <FormSlider\n                value={selection}\n                setValue={setSelection}\n                min={min}\n                max={max}\n                marks={marks}\n            />\n            <div className={styles.rowStyle}>\n                <Typography variant=\"body2\">{'Labels'}</Typography>\n                <TextField\n                    className={styles.entryStyle}\n                    rows={1}\n                    margin=\"none\"\n                    placeholder={'Labels'}\n                    variant=\"outlined\"\n                    error={labelError}\n                    value={textLabel}\n                    onChange={event => setTextLabel(event.target.value)}\n                    spellCheck={false}\n                />\n            </div>\n            <div className={styles.rowStyle}>\n                <Typography variant=\"body2\">{'Values'}</Typography>\n                <TextField\n                    className={styles.entryStyle}\n                    rows={1}\n                    margin=\"none\"\n                    placeholder={'Values'}\n                    variant=\"outlined\"\n                    value={textValues}\n                    error={valueError}\n                    onChange={event => setTextValues(event.target.value)}\n                    spellCheck={false}\n                />\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cx from 'classnames';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { FormRowItem, FormSlider, TableStack } from './components';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    commonStyle: {\n        padding: 48,\n    },\n}));\n\nconst marksOne = [\n    {\n        value: 1,\n        label: 'one'\n    },\n    {\n        value: 2,\n        label: 'two'\n    }, {\n        value: 3,\n        label: 'three'\n    }, {\n        value: 4,\n        label: 'four'\n    }, {\n        value: 5,\n        label: 'five'\n    },\n];\n\n\nconst App: React.FC = () => {\n    const styles = useStyles();\n    const [bonus, setBonus] = useState(0);\n    const [jobAssignment, setJobAssignment] = useState(0);\n    const [vaca, setVaca] = useState(0);\n    const [startDate, setStartDate] = useState(0);\n    const [meCov, setMeCov] = useState(0);\n    const [inCov, setInCov] = useState(0);\n    const [salary, setSalary] = useState(0);\n    const [location, setLocation] = useState(0);\n\n    const [score, setScore] = useState(0);\n    useEffect(() => {\n        setScore(bonus + jobAssignment + vaca + startDate + meCov + inCov + salary + location);\n    }, [bonus, jobAssignment, vaca, startDate, meCov, inCov, salary, location]);\n    return (\n        <div className={cx('App', styles.commonStyle)}>\n            <Typography variant=\"h6\">{`Your total Score: ${score}`}</Typography>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Category</TableCell>\n                        <TableCell align=\"left\">Selection</TableCell>\n                        <TableCell align=\"right\">Value</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableRow>\n                    <TableCell>Bonus</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            setValue={setBonus}\n                        />\n                    </TableCell>\n                    <TableCell align=\"right\">{bonus}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Job Assignment</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            setValue={setJobAssignment}\n                        />\n                    </TableCell>\n                    <TableCell align=\"right\">{jobAssignment}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Vacation Time</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            setValue={setVaca}\n                        />\n                    </TableCell>\n                    <TableCell align=\"right\">{vaca}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Starting Date</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            setValue={setStartDate}\n                        />\n                    </TableCell>\n                    <TableCell align=\"right\">{startDate}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Moving Cvg</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            setValue={setMeCov}\n                        />\n                    </TableCell>\n                    <TableCell align=\"right\">{meCov}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Insurance Covg</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            setValue={setInCov}\n                        />\n                    </TableCell>\n                    <TableCell align=\"right\">{inCov}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Salary</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            setValue={setSalary}\n                        />\n                    </TableCell>\n                    <TableCell align=\"right\">{salary}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Location</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            setValue={setLocation}\n                        />\n                    </TableCell>\n                    <TableCell align=\"right\">{location}</TableCell>\n                </TableRow>\n            </Table>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n    </ThemeProvider>,\n    document.querySelector('#root'),\n);\n"],"sourceRoot":""}