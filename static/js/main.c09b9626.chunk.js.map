{"version":3,"sources":["components/FormRowItem.tsx","components/FormSlider.tsx","helpers/textHelpers.ts","components/TableStack.tsx","App.tsx","theme.ts","index.tsx"],"names":["makeStyles","theme","formRow","height","padding","marginBottom","spacing","formRowExtended","rowLabel","minWidth","fontWeight","flexHorizontal","display","flexDirection","justifyContent","useStyles","commonStyle","width","verticalAlign","narrowStyle","extendedStyle","sliderStyle","FormSlider","props","min","max","marks","setValue","styles","Slider","className","defaultValue","aria-labelledby","step","valueLabelDisplay","value","onChange","event","MAGIC_LENGTH","stackStyle","rowStyle","alignItems","entryStyle","marginLeft","marginRight","DEFAULT_MARKS","label","TableStack","storageKey","useState","selection","setSelection","setMarks","localStorage","getItem","textLabel","setTextLabel","labelError","setLabelError","textValues","setTextValues","valueError","setValueError","setMin","setMax","useEffect","outputVals","userEntry","userSplit","split","length","console","log","splitLabelList","updatedMarks","map","mark","index","setItem","sanitizedSplit","entry","parseInt","filter","val","undefined","splitNumberList","minimax","mx","forEach","m","getMarksMinMax","Typography","variant","TextField","rows","margin","placeholder","error","target","spellCheck","App","bonus","setBonus","jobAssignment","setJobAssignment","vaca","setVaca","startDate","setStartDate","meCov","setMeCov","inCov","setInCov","salary","setSalary","location","setLocation","score","setScore","cx","Table","size","TableHead","TableRow","TableCell","align","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.c09b9626.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { number } from 'prop-types';\n\nconst useStyles = makeStyles(theme => ({\n    formRow: {\n        height: '40px',\n        padding: '0px 0px 0px 4px',\n        marginBottom: theme.spacing(3),\n    },\n    formRowExtended: {\n        height: '100px',\n        marginBottom: theme.spacing(3),\n    },\n    rowLabel: {\n        minWidth: '240px',\n        fontWeight: 'bold',\n        padding: '10px 0px 10px 0px',\n    },\n    flexHorizontal: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    }\n}));\n\ninterface FormRowItemProps {\n    title: string;\n    extended?: boolean;\n    children(): JSX.Element;\n    displayValue: number;\n}\n\nconst createRowLabel = (title: string, styles: string) => {\n    return <div className={styles}>{title}</div>;\n};\n\nexport const FormRowItem: React.FC<FormRowItemProps> = props => {\n    const styles = useStyles();\n    // const commonStyles = useCommonStyles();\n\n    return (\n        <div className={cx(styles.flexHorizontal, props.extended ? styles.formRowExtended : styles.formRow)}>\n            {createRowLabel(props.title, styles.rowLabel)}\n            {props.children()}\n            <Typography variant=\"body1\">{props.displayValue.toString()}</Typography>\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { Typography, Slider } from '@material-ui/core';\nimport { Mark } from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles(theme => ({\n    commonStyle: {\n        width: 760,\n        verticalAlign: 'center',\n    },\n    narrowStyle: {\n        width: 180,\n        verticalAlign: 'center',\n    },\n    extendedStyle: {\n        width: 760,\n        verticalAlign: 'center',\n    },\n    sliderStyle: {\n        width: 256,\n        minWidth: 256,\n    }\n}));\n\ninterface FormSliderProps {\n    hint?: string;\n    min: number;\n    max: number;\n    value: number;\n    setValue: React.Dispatch<React.SetStateAction<number>>;\n    marks: Mark[];\n}\n\nfunction valuetext(value: number): string {\n    return `${value}°C`;\n}\n\nexport const FormSlider: React.FC<FormSliderProps> = props => {\n    const { min, max, marks, setValue } = props;\n    const styles = useStyles();\n\n    // const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //     props.setValue(event.target.value);\n    // };\n\n    const handleChange = (event: React.ChangeEvent<{}>, value: number | number[]) => {\n        const numVal = value as number;\n        setValue(numVal);\n    }\n    return (\n        <div>\n            <Slider\n                className={styles.sliderStyle}\n                defaultValue={min}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={null}\n                valueLabelDisplay=\"auto\"\n                min={min}\n                max={max}\n                value={props.value}\n                onChange={handleChange}\n                marks={marks}\n            />\n        </div>\n    );\n};\n","\nconst MAGIC_LENGTH = 5;\n\nexport function splitNumberList(userEntry: string): number[] {\n    const userSplit = userEntry.split(',');\n    if (userSplit.length !== MAGIC_LENGTH) {\n        console.log('You gave me bad info');\n        return [];\n    }\n    const unsanitizedSplit = userSplit.map(entry => parseInt(entry));\n    const sanitizedSplit = unsanitizedSplit.filter(val => val !== undefined);\n    if (sanitizedSplit.length === MAGIC_LENGTH) {\n        return sanitizedSplit;\n    }\n    return [];\n}\n\nexport function splitLabelList(userEntry: string): string[] {\n    const userSplit = userEntry.split(',');\n    if (userSplit.length !== MAGIC_LENGTH) {\n        console.log('You gave me bad info');\n        return [];\n    }\n    return userSplit;\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport React, { useState, useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Mark } from '@material-ui/core/Slider';\nimport { FormSlider } from './FormSlider';\nimport { TextField } from '@material-ui/core';\nimport { splitNumberList, splitLabelList } from '../helpers/textHelpers';\n\nconst useStyles = makeStyles(theme => ({\n    stackStyle: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    rowStyle: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'baseline'\n    },\n    entryStyle: {\n        width: 384,\n        minWidth: 384,\n        marginLeft: 12,\n        marginRight: 12,\n    },\n    extendedStyle: {\n        width: 760,\n        verticalAlign: 'center',\n    },\n    sliderStyle: {\n        minWidth: 384,\n    }\n}));\n\ninterface TableStackProps {\n    storageKey: string;\n    setValue: React.Dispatch<React.SetStateAction<number>>;\n}\n\nconst DEFAULT_MARKS = [\n    {\n        value: 1,\n        label: 'one'\n    },\n    {\n        value: 2,\n        label: 'two'\n    }, {\n        value: 3,\n        label: 'three'\n    }, {\n        value: 4,\n        label: 'four'\n    }, {\n        value: 5,\n        label: 'five'\n    },\n] as const;\n\nfunction getMarksMinMax(mx: Mark[]): { min: number, max: number } {\n    let min = mx[0].value;\n    let max = mx[0].value;\n    mx.forEach(m => {\n        if (m.value < min) {\n            min = m.value;\n        }\n        if (m.value > max) {\n            max = m.value;\n        }\n    });\n    return { min, max }\n}\n\nexport const TableStack: React.FC<TableStackProps> = props => {\n    const { storageKey, setValue } = props;\n    const styles = useStyles();\n    const [selection, setSelection] = useState(1);\n    const [marks, setMarks] = useState<Mark[]>([...DEFAULT_MARKS]);\n\n    const [textLabel, setTextLabel] = useState<string>(localStorage.getItem(`${storageKey}-labels`) || '');\n    const [labelError, setLabelError] = useState(false);\n    const [textValues, setTextValues] = useState<string>(localStorage.getItem(`${storageKey}-values`) || '');\n    const [valueError, setValueError] = useState(false);\n    const [min, setMin] = useState<number>(DEFAULT_MARKS[0].value);\n    const [max, setMax] = useState<number>(DEFAULT_MARKS[4].value);\n\n    useEffect(() => {\n        const outputVals = splitLabelList(textLabel);\n        if (outputVals.length > 0) {\n            const updatedMarks = [...marks].map((mark, index) => ({ value: mark.value, label: outputVals[index] }));\n            localStorage.setItem(`${storageKey}-labels`, textLabel);\n            setLabelError(false);\n            setMarks(updatedMarks);\n        } else {\n            setLabelError(true);\n        }\n    }, [textLabel]);\n    useEffect(() => {\n        const outputVals = splitNumberList(textValues);\n        if (outputVals.length > 0) {\n            localStorage.setItem(`${storageKey}-values`, textValues);\n            const updatedMarks = [...marks].map((mark, index) => ({ value: outputVals[index], label: mark.label }));\n            const minimax = getMarksMinMax(updatedMarks);\n            setMin(minimax.min);\n            setMax(minimax.max);\n            setValueError(false);\n            setMarks(updatedMarks);\n        } else {\n            setValueError(true);\n        }\n    }, [textValues]);\n    useEffect(() => {\n        setValue(selection);\n    }, [selection, setValue]);\n    return (\n        <div className={styles.stackStyle}>\n            <FormSlider\n                value={selection}\n                setValue={setSelection}\n                min={min}\n                max={max}\n                marks={marks}\n            />\n            <div className={styles.rowStyle}>\n                <Typography variant=\"body2\">{'Labels'}</Typography>\n                <TextField\n                    className={styles.entryStyle}\n                    rows={1}\n                    margin=\"none\"\n                    placeholder={'Labels'}\n                    variant=\"standard\"\n                    error={labelError}\n                    value={textLabel}\n                    onChange={event => setTextLabel(event.target.value)}\n                    spellCheck={false}\n                />\n            </div>\n            <div className={styles.rowStyle}>\n                <Typography variant=\"body2\">{'Scores'}</Typography>\n                <TextField\n                    className={styles.entryStyle}\n                    rows={1}\n                    margin=\"none\"\n                    placeholder={'Scores'}\n                    variant=\"standard\"\n                    value={textValues}\n                    error={valueError}\n                    onChange={event => setTextValues(event.target.value)}\n                    spellCheck={false}\n                />\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cx from 'classnames';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { FormRowItem, FormSlider, TableStack } from './components';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    commonStyle: {\n        padding: 48,\n    },\n}));\n\nconst marksOne = [\n    {\n        value: 1,\n        label: 'one'\n    },\n    {\n        value: 2,\n        label: 'two'\n    }, {\n        value: 3,\n        label: 'three'\n    }, {\n        value: 4,\n        label: 'four'\n    }, {\n        value: 5,\n        label: 'five'\n    },\n];\n\n\nconst App: React.FC = () => {\n    const styles = useStyles();\n    const [bonus, setBonus] = useState(0);\n    const [jobAssignment, setJobAssignment] = useState(0);\n    const [vaca, setVaca] = useState(0);\n    const [startDate, setStartDate] = useState(0);\n    const [meCov, setMeCov] = useState(0);\n    const [inCov, setInCov] = useState(0);\n    const [salary, setSalary] = useState(0);\n    const [location, setLocation] = useState(0);\n\n    const [score, setScore] = useState(0);\n    useEffect(() => {\n        setScore(bonus + jobAssignment + vaca + startDate + meCov + inCov + salary + location);\n    }, [bonus, jobAssignment, vaca, startDate, meCov, inCov, salary, location]);\n    return (\n        <div className={cx('App', styles.commonStyle)}>\n            <Typography variant=\"h6\">{`Your total Score: ${score}`}</Typography>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Category</TableCell>\n                        <TableCell align=\"left\">Selection</TableCell>\n                        <TableCell align=\"left\">Score</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableRow>\n                    <TableCell>Bonus</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            storageKey=\"bonus\"\n                            setValue={setBonus}\n                        />\n                    </TableCell>\n                    <TableCell align=\"left\">{bonus}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Job Assignment</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            storageKey=\"jobassignment\"\n                            setValue={setJobAssignment}\n                        />\n                    </TableCell>\n                    <TableCell align=\"left\">{jobAssignment}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Vacation Time</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            storageKey=\"vacation\"\n                            setValue={setVaca}\n                        />\n                    </TableCell>\n                    <TableCell align=\"left\">{vaca}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Starting Date</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            storageKey=\"startdate\"\n                            setValue={setStartDate}\n                        />\n                    </TableCell>\n                    <TableCell align=\"left\">{startDate}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Moving Cvg</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            storageKey=\"movingcoverage\"\n                            setValue={setMeCov}\n                        />\n                    </TableCell>\n                    <TableCell align=\"left\">{meCov}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Insurance Covg</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            storageKey=\"insurancecoverage\"\n                            setValue={setInCov}\n                        />\n                    </TableCell>\n                    <TableCell align=\"left\">{inCov}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Salary</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            storageKey=\"salary\"\n                            setValue={setSalary}\n                        />\n                    </TableCell>\n                    <TableCell align=\"left\">{salary}</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>Location</TableCell>\n                    <TableCell align=\"left\">\n                        <TableStack\n                            storageKey=\"citylocation\"\n                            setValue={setLocation}\n                        />\n                    </TableCell>\n                    <TableCell align=\"left\">{location}</TableCell>\n                </TableRow>\n            </Table>\n        </div>\n    );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n    </ThemeProvider>,\n    document.querySelector('#root'),\n);\n"],"sourceRoot":""}